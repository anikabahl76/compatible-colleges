
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 1022990
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     * 
     */
    double abilityToPay=0;
    CollegeLinkedList userColleges = new CollegeLinkedList();
    
    public MainWindow() {
        initComponents();
        //first window set visible, all others set not visible
        scholarTrueFalseWindow.setVisible(true);
        collegeInfoWindow.setVisible(false);
        scholarInfoWindow.setVisible(false);
        notDoubleErrorWindow.setVisible(false);
        blankFieldErrorWindow.setVisible(false);
        buttonNotSelectedErrorWindow.setVisible(false);
        rankingWindow.setVisible(false);
        weightingSettingsWindow.setVisible(false);
        comparisonWindow.setVisible(false);
        CollegesToCompareWindow.setVisible(false);
        tooManyButtonsErrorWindow.setVisible(false);
        collegeNotFoundErrorWindow.setVisible(false);
    }
    
    public double convertToWorkableDouble(String s) {
        //string is split into an array of all its characters
        String[] sArray = s.split("");
        String modifiedString = "";
        for (int i =0;i<sArray.length;i++)
        {
            //check that elements is not a comma or $ sign
            if (!(sArray[i].equals(","))&&!(sArray[i].equals("$")))
            {
                //check that elements are not a percent sign
                if (!(sArray[i].equals("%")))
                {
                    //if conditions met, add the element to modifiedString
                    modifiedString+=sArray[i];
                }
            }     
        }
        //Any string that this method has been used on within this program will now contain only numbers, thus it can be successfully parsed with the parseDouble method
        double n = Double.parseDouble(modifiedString);
        return n;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        allWindowsLayered = new javax.swing.JLayeredPane();
        comparisonWindow = new javax.swing.JPanel();
        ROIComparison = new javax.swing.JLabel();
        comparisonWindowTitle = new javax.swing.JLabel();
        loanPayoffPeriodComparison = new javax.swing.JLabel();
        upfrontCostComparison = new javax.swing.JLabel();
        earlyCareerSalaryComparison = new javax.swing.JLabel();
        midCareerSalaryComparison = new javax.swing.JLabel();
        comparisonWindowExit = new javax.swing.JButton();
        toRankings = new javax.swing.JButton();
        blankFieldErrorWindow = new javax.swing.JPanel();
        blankFieldErrorMessage = new javax.swing.JLabel();
        errorMessageAcknowledge1 = new javax.swing.JButton();
        ErrorTitle1 = new javax.swing.JLabel();
        weightingSettingsWindow = new javax.swing.JPanel();
        weightingSettingsTitle = new javax.swing.JLabel();
        notImporantLabel = new javax.swing.JLabel();
        neutralLabel = new javax.swing.JLabel();
        importantLabel = new javax.swing.JLabel();
        ROIWeighting = new javax.swing.JSlider();
        ROIWeightingLabel = new javax.swing.JLabel();
        loanPayoffPeiodWeightingLabel = new javax.swing.JLabel();
        loanPayoffPeriodWeighting = new javax.swing.JSlider();
        upfrontCostWeighting = new javax.swing.JSlider();
        upfrontCostWeightingLabel = new javax.swing.JLabel();
        midCareerSalaryWeightingLabel = new javax.swing.JLabel();
        midCareerSalaryWeighting = new javax.swing.JSlider();
        earlyCareerSalaryWeightingLabel = new javax.swing.JLabel();
        earlyCareerSalaryWeighting = new javax.swing.JSlider();
        weightRankingsImplement = new javax.swing.JButton();
        weightingSettingsWindowExit = new javax.swing.JToggleButton();
        notDoubleErrorWindow = new javax.swing.JPanel();
        notDoubleErrorMessageLine1 = new javax.swing.JLabel();
        errorMessageAcknowledge = new javax.swing.JButton();
        ErrorTitle = new javax.swing.JLabel();
        notDoubleErrorMessageLine2 = new javax.swing.JLabel();
        buttonNotSelectedErrorWindow = new javax.swing.JPanel();
        buttonNotSelectedErrorMessage = new javax.swing.JLabel();
        errorMessageAcknowledge2 = new javax.swing.JButton();
        ErrorTitle2 = new javax.swing.JLabel();
        scholarInfoWindow = new javax.swing.JPanel();
        window4Title = new javax.swing.JLabel();
        window4Question1 = new javax.swing.JLabel();
        fourTime = new javax.swing.JRadioButton();
        oneTime = new javax.swing.JRadioButton();
        scholarAmount = new javax.swing.JTextField();
        finishAddingScholars = new javax.swing.JButton();
        addMoreScholars = new javax.swing.JButton();
        window4Exit = new javax.swing.JButton();
        scholarTrueFalseWindow = new javax.swing.JPanel();
        window3Question1 = new javax.swing.JLabel();
        scholarPresenceTrue = new javax.swing.JButton();
        scholarPresenceFalse = new javax.swing.JButton();
        rankingWindow = new javax.swing.JPanel();
        rankingWindowTitle = new javax.swing.JLabel();
        college1Name = new javax.swing.JLabel();
        college2Name = new javax.swing.JLabel();
        college3Name = new javax.swing.JLabel();
        college4Name = new javax.swing.JLabel();
        college5Name = new javax.swing.JLabel();
        college1Score = new javax.swing.JLabel();
        college2Score = new javax.swing.JLabel();
        college3Score = new javax.swing.JLabel();
        college4Score = new javax.swing.JLabel();
        college5Score = new javax.swing.JLabel();
        matchScoreLabel = new javax.swing.JLabel();
        bestAreaLabel = new javax.swing.JLabel();
        college1BestArea = new javax.swing.JLabel();
        college2BestArea = new javax.swing.JLabel();
        college3BestArea = new javax.swing.JLabel();
        college4BestArea = new javax.swing.JLabel();
        college5BestArea = new javax.swing.JLabel();
        worstAreaLabel = new javax.swing.JLabel();
        college1WorstArea = new javax.swing.JLabel();
        college2WorstArea = new javax.swing.JLabel();
        college3WorstArea = new javax.swing.JLabel();
        college4WorstArea = new javax.swing.JLabel();
        college5WorstArea = new javax.swing.JLabel();
        compareColleges = new javax.swing.JButton();
        weightRankings = new javax.swing.JButton();
        rankingWindowExit = new javax.swing.JButton();
        collegeInfoWindow = new javax.swing.JPanel();
        window2Question1 = new javax.swing.JLabel();
        window2Title2 = new javax.swing.JLabel();
        window2Question2 = new javax.swing.JLabel();
        window2Question3 = new javax.swing.JLabel();
        window2Question4 = new javax.swing.JLabel();
        window2Question5 = new javax.swing.JLabel();
        collegeName = new javax.swing.JTextField();
        grantsMoney = new javax.swing.JTextField();
        loansMoney = new javax.swing.JTextField();
        workstudysMoney = new javax.swing.JTextField();
        interestRate = new javax.swing.JTextField();
        addMoreColleges = new javax.swing.JButton();
        finishAddingColleges = new javax.swing.JButton();
        window2Exit = new javax.swing.JButton();
        window2Title = new javax.swing.JLabel();
        percentSignLabel = new javax.swing.JLabel();
        tooManyButtonsErrorWindow = new javax.swing.JPanel();
        ErrorTitle3 = new javax.swing.JLabel();
        blankFieldErrorMessage1 = new javax.swing.JLabel();
        errorMessageAcknowledge3 = new javax.swing.JButton();
        CollegesToCompareWindow = new javax.swing.JPanel();
        collegesToCompareQuestion = new javax.swing.JLabel();
        miscCollege1 = new javax.swing.JTextField();
        college1Option = new javax.swing.JRadioButton();
        college2Option = new javax.swing.JRadioButton();
        college3Option = new javax.swing.JRadioButton();
        college4Option = new javax.swing.JRadioButton();
        college5Option = new javax.swing.JRadioButton();
        miscCollege2 = new javax.swing.JTextField();
        college6Option = new javax.swing.JRadioButton();
        college7Option = new javax.swing.JRadioButton();
        canAddOthersInfo = new javax.swing.JLabel();
        compareCollegesImplement = new javax.swing.JButton();
        collegeNotFoundErrorWindow = new javax.swing.JPanel();
        ErrorTitle4 = new javax.swing.JLabel();
        collegeNotFoundErrorMessage = new javax.swing.JLabel();
        errorMessageAcknowledge4 = new javax.swing.JButton();

        buttonGroup1.add(oneTime);
        buttonGroup1.add(fourTime);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        allWindowsLayered.setMaximumSize(new java.awt.Dimension(792, 462));
        allWindowsLayered.setMinimumSize(new java.awt.Dimension(720, 420));
        allWindowsLayered.setSize(new java.awt.Dimension(600, 350));

        comparisonWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        ROIComparison.setText("Your return on investment will be greater by $");

        comparisonWindowTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        comparisonWindowTitle.setText("Title College 1");

        loanPayoffPeriodComparison.setText("Your loan payoff period will be less by");

        upfrontCostComparison.setText("Your upfront cost will be less by $");

        earlyCareerSalaryComparison.setText("Your salary one year after graduation will be greater by $");

        midCareerSalaryComparison.setText("Your salary ten years after graduation will be greater by $");

        comparisonWindowExit.setText("Exit");
        comparisonWindowExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comparisonWindowExitActionPerformed(evt);
            }
        });

        toRankings.setText("Back to Rankings");
        toRankings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toRankingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout comparisonWindowLayout = new javax.swing.GroupLayout(comparisonWindow);
        comparisonWindow.setLayout(comparisonWindowLayout);
        comparisonWindowLayout.setHorizontalGroup(
            comparisonWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonWindowLayout.createSequentialGroup()
                .addComponent(comparisonWindowExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(toRankings)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, comparisonWindowLayout.createSequentialGroup()
                .addContainerGap(305, Short.MAX_VALUE)
                .addComponent(comparisonWindowTitle)
                .addGap(290, 290, 290))
            .addGroup(comparisonWindowLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(comparisonWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(midCareerSalaryComparison)
                    .addComponent(loanPayoffPeriodComparison)
                    .addComponent(ROIComparison)
                    .addComponent(upfrontCostComparison)
                    .addComponent(earlyCareerSalaryComparison))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        comparisonWindowLayout.setVerticalGroup(
            comparisonWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonWindowLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(comparisonWindowTitle)
                .addGap(92, 92, 92)
                .addComponent(ROIComparison)
                .addGap(18, 18, 18)
                .addComponent(loanPayoffPeriodComparison)
                .addGap(18, 18, 18)
                .addComponent(upfrontCostComparison)
                .addGap(18, 18, 18)
                .addComponent(earlyCareerSalaryComparison)
                .addGap(18, 18, 18)
                .addComponent(midCareerSalaryComparison)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(comparisonWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comparisonWindowExit)
                    .addComponent(toRankings))
                .addContainerGap())
        );

        blankFieldErrorWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        blankFieldErrorMessage.setText("Please fill in all fields");

        errorMessageAcknowledge1.setText("Okay");
        errorMessageAcknowledge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorMessageAcknowledge1ActionPerformed(evt);
            }
        });

        ErrorTitle1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        ErrorTitle1.setText("Error");

        javax.swing.GroupLayout blankFieldErrorWindowLayout = new javax.swing.GroupLayout(blankFieldErrorWindow);
        blankFieldErrorWindow.setLayout(blankFieldErrorWindowLayout);
        blankFieldErrorWindowLayout.setHorizontalGroup(
            blankFieldErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blankFieldErrorWindowLayout.createSequentialGroup()
                .addContainerGap(300, Short.MAX_VALUE)
                .addGroup(blankFieldErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blankFieldErrorWindowLayout.createSequentialGroup()
                        .addComponent(blankFieldErrorMessage)
                        .addGap(286, 286, 286))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blankFieldErrorWindowLayout.createSequentialGroup()
                        .addComponent(ErrorTitle1)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blankFieldErrorWindowLayout.createSequentialGroup()
                        .addComponent(errorMessageAcknowledge1)
                        .addGap(313, 313, 313))))
        );
        blankFieldErrorWindowLayout.setVerticalGroup(
            blankFieldErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blankFieldErrorWindowLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(ErrorTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blankFieldErrorMessage)
                .addGap(18, 18, 18)
                .addComponent(errorMessageAcknowledge1)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        weightingSettingsWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        weightingSettingsTitle.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        weightingSettingsTitle.setText("Weight Your Preferences");

        notImporantLabel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        notImporantLabel.setText("Not Important");

        neutralLabel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        neutralLabel.setText("Neutral");

        importantLabel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        importantLabel.setText("Important");

        ROIWeightingLabel.setText("Return on Investment (ROI)");

        loanPayoffPeiodWeightingLabel.setText("Loan Payoff Period");

        upfrontCostWeightingLabel.setText("Upfront Cost");

        midCareerSalaryWeightingLabel.setText("Mid-Career Salary");

        earlyCareerSalaryWeightingLabel.setText("Early-Career Salary");

        weightRankingsImplement.setText("Weight Rankings");
        weightRankingsImplement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightRankingsImplementActionPerformed(evt);
            }
        });

        weightingSettingsWindowExit.setText("Exit");
        weightingSettingsWindowExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightingSettingsWindowExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout weightingSettingsWindowLayout = new javax.swing.GroupLayout(weightingSettingsWindow);
        weightingSettingsWindow.setLayout(weightingSettingsWindowLayout);
        weightingSettingsWindowLayout.setHorizontalGroup(
            weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weightingSettingsWindowLayout.createSequentialGroup()
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, weightingSettingsWindowLayout.createSequentialGroup()
                        .addComponent(weightingSettingsWindowExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weightRankingsImplement))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, weightingSettingsWindowLayout.createSequentialGroup()
                        .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(weightingSettingsWindowLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(notImporantLabel)
                                .addGap(62, 62, 62)
                                .addComponent(neutralLabel)
                                .addGap(57, 57, 57)
                                .addComponent(importantLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, weightingSettingsWindowLayout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(midCareerSalaryWeightingLabel)
                                    .addComponent(upfrontCostWeightingLabel)
                                    .addComponent(ROIWeightingLabel)
                                    .addComponent(loanPayoffPeiodWeightingLabel)
                                    .addComponent(earlyCareerSalaryWeightingLabel))
                                .addGap(39, 39, 39)
                                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ROIWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loanPayoffPeriodWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upfrontCostWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midCareerSalaryWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(earlyCareerSalaryWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 89, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, weightingSettingsWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(weightingSettingsTitle)
                .addGap(209, 209, 209))
        );
        weightingSettingsWindowLayout.setVerticalGroup(
            weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weightingSettingsWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(weightingSettingsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notImporantLabel)
                    .addComponent(neutralLabel)
                    .addComponent(importantLabel))
                .addGap(13, 13, 13)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ROIWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROIWeightingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loanPayoffPeriodWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loanPayoffPeiodWeightingLabel))
                .addGap(6, 6, 6)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upfrontCostWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upfrontCostWeightingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(midCareerSalaryWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(midCareerSalaryWeightingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(earlyCareerSalaryWeighting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(earlyCareerSalaryWeightingLabel, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(67, 67, 67)
                .addGroup(weightingSettingsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightingSettingsWindowExit)
                    .addComponent(weightRankingsImplement))
                .addGap(18, 18, 18))
        );

        notDoubleErrorWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        notDoubleErrorMessageLine1.setText("Please enter a number for all fields");

        errorMessageAcknowledge.setText("Okay");
        errorMessageAcknowledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorMessageAcknowledgeActionPerformed(evt);
            }
        });

        ErrorTitle.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        ErrorTitle.setText("Error");

        notDoubleErrorMessageLine2.setText(" relating to dollar amounts");

        javax.swing.GroupLayout notDoubleErrorWindowLayout = new javax.swing.GroupLayout(notDoubleErrorWindow);
        notDoubleErrorWindow.setLayout(notDoubleErrorWindowLayout);
        notDoubleErrorWindowLayout.setHorizontalGroup(
            notDoubleErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notDoubleErrorWindowLayout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addGroup(notDoubleErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notDoubleErrorWindowLayout.createSequentialGroup()
                        .addComponent(notDoubleErrorMessageLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(230, 230, 230))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notDoubleErrorWindowLayout.createSequentialGroup()
                        .addComponent(ErrorTitle)
                        .addGap(318, 318, 318))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notDoubleErrorWindowLayout.createSequentialGroup()
                        .addComponent(errorMessageAcknowledge)
                        .addGap(310, 310, 310))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notDoubleErrorWindowLayout.createSequentialGroup()
                        .addComponent(notDoubleErrorMessageLine2)
                        .addGap(266, 266, 266))))
        );
        notDoubleErrorWindowLayout.setVerticalGroup(
            notDoubleErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notDoubleErrorWindowLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(ErrorTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notDoubleErrorMessageLine1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notDoubleErrorMessageLine2)
                .addGap(18, 18, 18)
                .addComponent(errorMessageAcknowledge)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        buttonNotSelectedErrorWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        buttonNotSelectedErrorMessage.setText("Please select a radio button");

        errorMessageAcknowledge2.setText("Okay");
        errorMessageAcknowledge2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorMessageAcknowledge2ActionPerformed(evt);
            }
        });

        ErrorTitle2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        ErrorTitle2.setText("Error");

        javax.swing.GroupLayout buttonNotSelectedErrorWindowLayout = new javax.swing.GroupLayout(buttonNotSelectedErrorWindow);
        buttonNotSelectedErrorWindow.setLayout(buttonNotSelectedErrorWindowLayout);
        buttonNotSelectedErrorWindowLayout.setHorizontalGroup(
            buttonNotSelectedErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonNotSelectedErrorWindowLayout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(buttonNotSelectedErrorMessage)
                .addContainerGap(273, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonNotSelectedErrorWindowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonNotSelectedErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonNotSelectedErrorWindowLayout.createSequentialGroup()
                        .addComponent(errorMessageAcknowledge2)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonNotSelectedErrorWindowLayout.createSequentialGroup()
                        .addComponent(ErrorTitle2)
                        .addGap(328, 328, 328))))
        );
        buttonNotSelectedErrorWindowLayout.setVerticalGroup(
            buttonNotSelectedErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonNotSelectedErrorWindowLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addComponent(ErrorTitle2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonNotSelectedErrorMessage)
                .addGap(18, 18, 18)
                .addComponent(errorMessageAcknowledge2)
                .addGap(161, 161, 161))
        );

        scholarInfoWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        window4Title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        window4Title.setText("Input Scholarship Information");

        window4Question1.setText("Scholarship Amount:");

        fourTime.setText("Payment Repeated annually");

        oneTime.setText("One-time payment");
        oneTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oneTimeFocusGained(evt);
            }
        });
        oneTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneTimeActionPerformed(evt);
            }
        });

        finishAddingScholars.setText("Finished Adding Scholarships");
        finishAddingScholars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishAddingScholarsActionPerformed(evt);
            }
        });

        addMoreScholars.setText("Add Another Scholarship");
        addMoreScholars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreScholarsActionPerformed(evt);
            }
        });

        window4Exit.setText("Exit");
        window4Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                window4ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scholarInfoWindowLayout = new javax.swing.GroupLayout(scholarInfoWindow);
        scholarInfoWindow.setLayout(scholarInfoWindowLayout);
        scholarInfoWindowLayout.setHorizontalGroup(
            scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scholarInfoWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scholarInfoWindowLayout.createSequentialGroup()
                        .addComponent(window4Exit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addMoreScholars)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(finishAddingScholars)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scholarInfoWindowLayout.createSequentialGroup()
                        .addGap(0, 166, Short.MAX_VALUE)
                        .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scholarInfoWindowLayout.createSequentialGroup()
                                .addComponent(window4Title)
                                .addGap(186, 186, 186))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scholarInfoWindowLayout.createSequentialGroup()
                                .addComponent(window4Question1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(scholarAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(scholarInfoWindowLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(oneTime)
                                            .addComponent(fourTime))))
                                .addGap(196, 196, 196))))))
        );
        scholarInfoWindowLayout.setVerticalGroup(
            scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scholarInfoWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(window4Title)
                .addGap(123, 123, 123)
                .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scholarAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(window4Question1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oneTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fourTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(scholarInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finishAddingScholars)
                    .addComponent(addMoreScholars)
                    .addComponent(window4Exit))
                .addContainerGap())
        );

        scholarTrueFalseWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        window3Question1.setText("Are you a recipient of any scholarships?");

        scholarPresenceTrue.setText("Yes");
        scholarPresenceTrue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scholarPresenceTrueActionPerformed(evt);
            }
        });

        scholarPresenceFalse.setText("No");
        scholarPresenceFalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scholarPresenceFalseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scholarTrueFalseWindowLayout = new javax.swing.GroupLayout(scholarTrueFalseWindow);
        scholarTrueFalseWindow.setLayout(scholarTrueFalseWindowLayout);
        scholarTrueFalseWindowLayout.setHorizontalGroup(
            scholarTrueFalseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scholarTrueFalseWindowLayout.createSequentialGroup()
                .addGroup(scholarTrueFalseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scholarTrueFalseWindowLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(scholarPresenceFalse)
                        .addGap(133, 133, 133)
                        .addComponent(scholarPresenceTrue))
                    .addGroup(scholarTrueFalseWindowLayout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(window3Question1)))
                .addContainerGap(219, Short.MAX_VALUE))
        );
        scholarTrueFalseWindowLayout.setVerticalGroup(
            scholarTrueFalseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scholarTrueFalseWindowLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(window3Question1)
                .addGap(34, 34, 34)
                .addGroup(scholarTrueFalseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scholarPresenceFalse)
                    .addComponent(scholarPresenceTrue))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        rankingWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        rankingWindowTitle.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        rankingWindowTitle.setText("Your Top Colleges");

        college1Name.setText("College1");

        college2Name.setText("College2");

        college3Name.setText("College3");

        college4Name.setText("College4");

        college5Name.setText("College5");

        college1Score.setText("college1score");

        college2Score.setText("college2score");

        college3Score.setText("college3score");

        college4Score.setText("college4score");

        college5Score.setText("college5score");

        matchScoreLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        matchScoreLabel.setText("Overall Match Score");

        bestAreaLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        bestAreaLabel.setText("Best Area");

        college1BestArea.setText("area1");

        college2BestArea.setText("area2");

        college3BestArea.setText("area3");

        college4BestArea.setText("area4");

        college5BestArea.setText("area5");

        worstAreaLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        worstAreaLabel.setText("Worst Area");

        college1WorstArea.setText("area1");

        college2WorstArea.setText("area2");

        college3WorstArea.setText("area3");

        college4WorstArea.setText("area4");

        college5WorstArea.setText("area5");

        compareColleges.setText("Compare Colleges");
        compareColleges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareCollegesActionPerformed(evt);
            }
        });

        weightRankings.setText("Weight Rankings");
        weightRankings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightRankingsActionPerformed(evt);
            }
        });

        rankingWindowExit.setText("Exit");
        rankingWindowExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankingWindowExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rankingWindowLayout = new javax.swing.GroupLayout(rankingWindow);
        rankingWindow.setLayout(rankingWindowLayout);
        rankingWindowLayout.setHorizontalGroup(
            rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rankingWindowLayout.createSequentialGroup()
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rankingWindowLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(rankingWindowTitle)
                        .addGap(0, 322, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rankingWindowLayout.createSequentialGroup()
                        .addComponent(rankingWindowExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weightRankings)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compareColleges)))
                .addContainerGap())
            .addGroup(rankingWindowLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(college1Name)
                    .addComponent(college2Name)
                    .addComponent(college3Name)
                    .addComponent(college4Name)
                    .addComponent(college5Name))
                .addGap(41, 41, 41)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matchScoreLabel)
                    .addComponent(college1Score)
                    .addComponent(college2Score)
                    .addComponent(college3Score)
                    .addComponent(college4Score)
                    .addComponent(college5Score))
                .addGap(39, 39, 39)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bestAreaLabel)
                    .addComponent(college1BestArea)
                    .addComponent(college2BestArea)
                    .addComponent(college3BestArea)
                    .addComponent(college4BestArea)
                    .addComponent(college5BestArea))
                .addGap(36, 36, 36)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(college5WorstArea)
                    .addComponent(college4WorstArea)
                    .addComponent(college3WorstArea)
                    .addComponent(college2WorstArea)
                    .addComponent(college1WorstArea)
                    .addComponent(worstAreaLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rankingWindowLayout.setVerticalGroup(
            rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rankingWindowLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(rankingWindowTitle)
                .addGap(71, 71, 71)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matchScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bestAreaLabel)
                    .addComponent(worstAreaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college1Name)
                    .addComponent(college1Score)
                    .addComponent(college1BestArea)
                    .addComponent(college1WorstArea))
                .addGap(18, 18, 18)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college2Name)
                    .addComponent(college2Score)
                    .addComponent(college2BestArea)
                    .addComponent(college2WorstArea))
                .addGap(18, 18, 18)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college3Name)
                    .addComponent(college3Score)
                    .addComponent(college3BestArea)
                    .addComponent(college3WorstArea))
                .addGap(18, 18, 18)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college4Name)
                    .addComponent(college4Score)
                    .addComponent(college4BestArea)
                    .addComponent(college4WorstArea))
                .addGap(18, 18, 18)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college5Name)
                    .addComponent(college5Score)
                    .addComponent(college5BestArea)
                    .addComponent(college5WorstArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(rankingWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compareColleges)
                    .addComponent(weightRankings)
                    .addComponent(rankingWindowExit))
                .addContainerGap())
        );

        collegeInfoWindow.setPreferredSize(new java.awt.Dimension(720, 420));

        window2Question1.setText("College Full Name:");

        window2Title2.setText("Financial Aid Package Information");

        window2Question2.setText("Amount in grants (per year):");

        window2Question3.setText("Amount in loans (per year):");

        window2Question4.setText("Amount in work-study (per year):");

        window2Question5.setText("Interest rate on loans:");

        collegeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collegeNameActionPerformed(evt);
            }
        });

        addMoreColleges.setText("Add another college");
        addMoreColleges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreCollegesActionPerformed(evt);
            }
        });

        finishAddingColleges.setText("Finished Adding Colleges");
        finishAddingColleges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishAddingCollegesActionPerformed(evt);
            }
        });

        window2Exit.setText("Exit");
        window2Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                window2ExitActionPerformed(evt);
            }
        });

        window2Title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        window2Title.setText("Input College-Specific Information");

        percentSignLabel.setText("%");

        javax.swing.GroupLayout collegeInfoWindowLayout = new javax.swing.GroupLayout(collegeInfoWindow);
        collegeInfoWindow.setLayout(collegeInfoWindowLayout);
        collegeInfoWindowLayout.setHorizontalGroup(
            collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(window2Title)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(window2Title2)
                        .addGap(92, 92, 92))
                    .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                            .addComponent(window2Question5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(interestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(percentSignLabel)
                            .addGap(9, 9, 9))
                        .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                            .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                                    .addComponent(window2Question1)
                                    .addGap(18, 18, 18)
                                    .addComponent(collegeName, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, collegeInfoWindowLayout.createSequentialGroup()
                                        .addComponent(window2Question4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(workstudysMoney))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, collegeInfoWindowLayout.createSequentialGroup()
                                        .addComponent(window2Question3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(loansMoney))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, collegeInfoWindowLayout.createSequentialGroup()
                                        .addComponent(window2Question2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grantsMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(0, 68, Short.MAX_VALUE)))))
            .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                    .addComponent(window2Exit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                    .addComponent(addMoreColleges)
                    .addGap(18, 18, 18)
                    .addComponent(finishAddingColleges)
                    .addContainerGap()))
        );
        collegeInfoWindowLayout.setVerticalGroup(
            collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, collegeInfoWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(window2Title)
                .addGap(74, 74, 74)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(collegeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(window2Question1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(window2Title2)
                .addGap(9, 9, 9)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(window2Question2)
                    .addComponent(grantsMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(window2Question3)
                    .addComponent(loansMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(window2Question4)
                    .addComponent(workstudysMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(window2Question5)
                    .addComponent(interestRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percentSignLabel))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(collegeInfoWindowLayout.createSequentialGroup()
                    .addContainerGap(385, Short.MAX_VALUE)
                    .addGroup(collegeInfoWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addMoreColleges)
                        .addComponent(finishAddingColleges)
                        .addComponent(window2Exit))
                    .addContainerGap()))
        );

        ErrorTitle3.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        ErrorTitle3.setText("Error");

        blankFieldErrorMessage1.setText("Please choose exactly 2 college options");

        errorMessageAcknowledge3.setText("Okay");
        errorMessageAcknowledge3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorMessageAcknowledge3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tooManyButtonsErrorWindowLayout = new javax.swing.GroupLayout(tooManyButtonsErrorWindow);
        tooManyButtonsErrorWindow.setLayout(tooManyButtonsErrorWindowLayout);
        tooManyButtonsErrorWindowLayout.setHorizontalGroup(
            tooManyButtonsErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tooManyButtonsErrorWindowLayout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addGroup(tooManyButtonsErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tooManyButtonsErrorWindowLayout.createSequentialGroup()
                        .addComponent(ErrorTitle3)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tooManyButtonsErrorWindowLayout.createSequentialGroup()
                        .addComponent(errorMessageAcknowledge3)
                        .addGap(313, 313, 313))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tooManyButtonsErrorWindowLayout.createSequentialGroup()
                        .addComponent(blankFieldErrorMessage1)
                        .addGap(217, 217, 217))))
        );
        tooManyButtonsErrorWindowLayout.setVerticalGroup(
            tooManyButtonsErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tooManyButtonsErrorWindowLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(ErrorTitle3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blankFieldErrorMessage1)
                .addGap(18, 18, 18)
                .addComponent(errorMessageAcknowledge3)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        CollegesToCompareWindow.setSize(new java.awt.Dimension(720, 420));

        collegesToCompareQuestion.setText("Which two colleges would you like to compare?");

        college1Option.setText("jRadioButton1");
        college1Option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                college1OptionActionPerformed(evt);
            }
        });

        college2Option.setText("jRadioButton2");

        college3Option.setText("jRadioButton3");

        college4Option.setText("jRadioButton4");

        college5Option.setText("jRadioButton5");

        college6Option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                college6OptionActionPerformed(evt);
            }
        });

        canAddOthersInfo.setText("You can also compare a college that is not a top 5 match");

        compareCollegesImplement.setText("Compare Colleges");
        compareCollegesImplement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareCollegesImplementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CollegesToCompareWindowLayout = new javax.swing.GroupLayout(CollegesToCompareWindow);
        CollegesToCompareWindow.setLayout(CollegesToCompareWindowLayout);
        CollegesToCompareWindowLayout.setHorizontalGroup(
            CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CollegesToCompareWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(compareCollegesImplement)
                .addContainerGap())
            .addGroup(CollegesToCompareWindowLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addGroup(CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CollegesToCompareWindowLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(collegesToCompareQuestion))
                    .addComponent(college1Option)
                    .addComponent(college2Option)
                    .addComponent(college3Option)
                    .addComponent(college4Option)
                    .addComponent(college5Option)
                    .addGroup(CollegesToCompareWindowLayout.createSequentialGroup()
                        .addGroup(CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(college6Option)
                            .addComponent(college7Option))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(miscCollege2)
                            .addComponent(miscCollege1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(canAddOthersInfo))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        CollegesToCompareWindowLayout.setVerticalGroup(
            CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CollegesToCompareWindowLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(collegesToCompareQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(college1Option)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(college2Option)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(college3Option)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(college4Option)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(college5Option)
                .addGap(8, 8, 8)
                .addComponent(canAddOthersInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(college6Option)
                    .addComponent(miscCollege1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CollegesToCompareWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(miscCollege2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(college7Option))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(compareCollegesImplement)
                .addContainerGap())
        );

        collegeNotFoundErrorWindow.setPreferredSize(new java.awt.Dimension(720, 420));
        collegeNotFoundErrorWindow.setSize(new java.awt.Dimension(720, 420));

        ErrorTitle4.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        ErrorTitle4.setText("Error");

        collegeNotFoundErrorMessage.setText("College not found. Check that you have inputted it correctly");

        errorMessageAcknowledge4.setText("Okay");
        errorMessageAcknowledge4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorMessageAcknowledge4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout collegeNotFoundErrorWindowLayout = new javax.swing.GroupLayout(collegeNotFoundErrorWindow);
        collegeNotFoundErrorWindow.setLayout(collegeNotFoundErrorWindowLayout);
        collegeNotFoundErrorWindowLayout.setHorizontalGroup(
            collegeNotFoundErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collegeNotFoundErrorWindowLayout.createSequentialGroup()
                .addContainerGap(177, Short.MAX_VALUE)
                .addGroup(collegeNotFoundErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, collegeNotFoundErrorWindowLayout.createSequentialGroup()
                        .addComponent(ErrorTitle4)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, collegeNotFoundErrorWindowLayout.createSequentialGroup()
                        .addComponent(errorMessageAcknowledge4)
                        .addGap(313, 313, 313))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, collegeNotFoundErrorWindowLayout.createSequentialGroup()
                        .addComponent(collegeNotFoundErrorMessage)
                        .addGap(165, 165, 165))))
        );
        collegeNotFoundErrorWindowLayout.setVerticalGroup(
            collegeNotFoundErrorWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collegeNotFoundErrorWindowLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(ErrorTitle4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(collegeNotFoundErrorMessage)
                .addGap(18, 18, 18)
                .addComponent(errorMessageAcknowledge4)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        allWindowsLayered.setLayer(comparisonWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(blankFieldErrorWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(weightingSettingsWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(notDoubleErrorWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(buttonNotSelectedErrorWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(scholarInfoWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(scholarTrueFalseWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(rankingWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(collegeInfoWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(tooManyButtonsErrorWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(CollegesToCompareWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        allWindowsLayered.setLayer(collegeNotFoundErrorWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout allWindowsLayeredLayout = new javax.swing.GroupLayout(allWindowsLayered);
        allWindowsLayered.setLayout(allWindowsLayeredLayout);
        allWindowsLayeredLayout.setHorizontalGroup(
            allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tooManyButtonsErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(comparisonWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(blankFieldErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(weightingSettingsWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(notDoubleErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(buttonNotSelectedErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(scholarInfoWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(scholarTrueFalseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(rankingWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(collegeInfoWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(CollegesToCompareWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(collegeNotFoundErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        allWindowsLayeredLayout.setVerticalGroup(
            allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tooManyButtonsErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(comparisonWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(blankFieldErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(weightingSettingsWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(notDoubleErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(buttonNotSelectedErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(scholarInfoWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(scholarTrueFalseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(rankingWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(collegeInfoWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(CollegesToCompareWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(allWindowsLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(allWindowsLayeredLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(collegeNotFoundErrorWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allWindowsLayered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allWindowsLayered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void collegeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collegeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_collegeNameActionPerformed

    private void addMoreCollegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoreCollegesActionPerformed
        // TODO add your handling code here:
        //new college object created with all FinancialFactor attributes
        College newCollege = new College();
        newCollege.ROI = new FinancialFactor("ROI");
        newCollege.loanPayoffPeriod = new FinancialFactor("Loan Payoff Period");
        newCollege.upfrontCost = new FinancialFactor("Upfront Cost");
        newCollege.earlyCareerSalary = new FinancialFactor("Early Career Salary");
        newCollege.midCareerSalary = new FinancialFactor("Mid-Career Salary");
        //college name field must not be empty
        if (!collegeName.getText().isEmpty())
        {
            newCollege.setName(collegeName.getText());
            try {
                //all financial aid package information must be a number
                newCollege.setGrantMoney(Double.parseDouble(grantsMoney.getText()));
                try {
                    newCollege.setLoanMoney(Double.parseDouble(loansMoney.getText()));
                    try {
                        newCollege.setWorkstudyMoney(Double.parseDouble(workstudysMoney.getText()));
                        try {
                            newCollege.setLoanInterestRate(Double.parseDouble(interestRate.getText()));
                            String name = "";
                            //run until name variable can be set to college name that user inputted
                            for (int i =1;!(name.equals(newCollege.getName()));i++)
                            {
                                //connect to the webpage with the next page of the table
                                final Document document = Jsoup.connect("https://www.payscale.com/college-salary-report/bachelors/page/"+i).get();
                                //iterate through rows of the table
                                for(Element row : document.select("table.data-table tr"))
                                {
                                    String temp = row.select(".data-table__cell.csr-col--school-name").text();
                                    name = temp.replaceAll("School Name:","");
                                    if (name.equals(newCollege.getName()))
                                    {
                                        break;
                                    }
                                }
                            }
                            //create an array with all the words within the name
                            String[] nameParts = name.split(" ");
                            String URLName = "";
                            //put each element of the array toegether within a string
                            for (int j =0; j<nameParts.length-1;j++)
                            {
                                URLName += nameParts[j]+"_";
                            }
                            URLName += nameParts[nameParts.length-1];
                            //this eliminates all the spaces from the name of college so that it can be added to a URL
                            //connect to a webpage with more detailed information of the specific college
                            final Document newDocument = Jsoup.connect("https://www.payscale.com/research/US/School="+URLName+"/Salary").get();
                            Elements allCollegeInformation = newDocument.getElementsByClass("college-card__description--row");
                            String allCollegeInformationString = allCollegeInformation.text();
                            String[] separatedData = allCollegeInformationString.split(" ");
                            //ROI, mid-career salary and early-career salary information can be obtained straight from the website
                            newCollege.getROI().setRaw(convertToWorkableDouble(separatedData[4]));
                            newCollege.getMidCareerSalary().setRaw(convertToWorkableDouble(separatedData[16]));
                            newCollege.getEarlyCareerSalary().setRaw(convertToWorkableDouble(separatedData[19]));
                            //scholarship amounts and financial aid amounts are subtracted from tuition information obtained from the website to calculate upfront cost
                            newCollege.getUpfrontCost().setRaw(convertToWorkableDouble(separatedData[12])-abilityToPay-4*newCollege.getGrantMoney()-4*newCollege.getLoanMoney()-4*newCollege.getWorkstudyMoney());
                            //loan payoff period calculated using formula that checks to see when your ROI equals your loan amount plus the interest that has been accrued
                            double years = 50;
                            for(int i =0;i<50;i++)
                            {
                                if ((convertToWorkableDouble(separatedData[12])*(convertToWorkableDouble(separatedData[7])/100)*(i))>(newCollege.getLoanMoney()-((convertToWorkableDouble(separatedData[12])*(convertToWorkableDouble(separatedData[7])/100)*(i))*Math.pow((1+(newCollege.getLoanInterestRate())/100),i+1))))
                                {
                                    years = i+0.0;
                                    break;
                                }
                            }
                            newCollege.getLoanPayoffPeriod().setRaw(years);
                            userColleges.append(newCollege);
                            //screen cleared
                            collegeName.setText("");
                            grantsMoney.setText("");
                            loansMoney.setText("");
                            workstudysMoney.setText("");
                            interestRate.setText("");
  
                        }
                        catch (Exception h) {
                            h.printStackTrace();
                            notDoubleErrorWindow.setVisible(true);
                        }
                    }
                    catch (Exception g) {
                        g.printStackTrace();
                        notDoubleErrorWindow.setVisible(true);
                    }
                }
                catch (Exception f) {
                    f.printStackTrace();
                    notDoubleErrorWindow.setVisible(true);
                }
            }
            catch(Exception e) {
                e.printStackTrace();
                notDoubleErrorWindow.setVisible(true);
            }
        }
        else {
            blankFieldErrorWindow.setVisible(true);
        }
                       
    }//GEN-LAST:event_addMoreCollegesActionPerformed

    private void finishAddingCollegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishAddingCollegesActionPerformed
        // TODO add your handling code here:
        College newCollege = new College();
        newCollege.ROI = new FinancialFactor("ROI");
        newCollege.loanPayoffPeriod = new FinancialFactor("Loan Payoff Period");
        newCollege.upfrontCost = new FinancialFactor("Upfront Cost");
        newCollege.earlyCareerSalary = new FinancialFactor("Early Career Salary");
        newCollege.midCareerSalary = new FinancialFactor("Mid-Career Salary");
        if (!collegeName.getText().isEmpty())
        {
            newCollege.setName(collegeName.getText());
            try {
                newCollege.setGrantMoney(Double.parseDouble(grantsMoney.getText()));
                try {
                    newCollege.setLoanMoney(Double.parseDouble(loansMoney.getText()));
                    try {
                        newCollege.setWorkstudyMoney(Double.parseDouble(workstudysMoney.getText()));
                        try {
                            newCollege.setLoanInterestRate(Double.parseDouble(interestRate.getText()));
                            String name = "";
                            for (int i =1;!(name.equals(newCollege.getName()));i++)
                            {
                                final Document document = Jsoup.connect("https://www.payscale.com/college-salary-report/bachelors/page/"+i).get();
                                for(Element row : document.select("table.data-table tr"))
                                {
                                    String temp = row.select(".data-table__cell.csr-col--school-name").text();
                                    name = temp.replaceAll("School Name:","");
                                    if (name.equals(newCollege.getName()))
                                    {
                                        break;
                                    }
                                }
                            }
                            String[] nameParts = name.split(" ");
                            String URLName = "";
                            for (int j =0; j<nameParts.length-1;j++)
                            {
                                URLName += nameParts[j]+"_";
                            }
                            URLName += nameParts[nameParts.length-1];
                            final Document newDocument = Jsoup.connect("https://www.payscale.com/research/US/School="+URLName+"/Salary").get();
                            Elements allCollegeInformation = newDocument.getElementsByClass("college-card__description--row");
                            String allCollegeInformationString = allCollegeInformation.text();
                            String[] separatedData = allCollegeInformationString.split(" ");
                            newCollege.getROI().setRaw(convertToWorkableDouble(separatedData[4]));
                            newCollege.getMidCareerSalary().setRaw(convertToWorkableDouble(separatedData[16]));
                            newCollege.getEarlyCareerSalary().setRaw(convertToWorkableDouble(separatedData[19]));
                            newCollege.getUpfrontCost().setRaw(convertToWorkableDouble(separatedData[12])-abilityToPay-newCollege.getGrantMoney()-newCollege.getLoanMoney()-newCollege.getWorkstudyMoney());
                            double years = 50;
                            for(int i =0;i<50;i++)
                            {
                                if (0.1*(convertToWorkableDouble(separatedData[12])*(convertToWorkableDouble(separatedData[7])/100)*(i))>(newCollege.getLoanMoney()-((convertToWorkableDouble(separatedData[12])*(convertToWorkableDouble(separatedData[7])/100)*(i)*0.1)*Math.pow((1+(newCollege.getLoanInterestRate())/100),i+1))))
                                        {
                                            years = i+0.0;
                                            break;
                                        }
                            }
                            newCollege.getLoanPayoffPeriod().setRaw(years);
                            userColleges.append(newCollege);
                            collegeName.setText("");
                            grantsMoney.setText("");
                            loansMoney.setText("");
                            workstudysMoney.setText("");
                            interestRate.setText("");
                            //finishedAddingCollegesActionPerformed() method operates exactly the same as addMoreCollegesActionPerformed() method up until this point
                            //find max algorithim for ROI, early career salary and mid-career salary
                            //find min algorithim for upfront cost and loan payoff period
                            double maxROI= userColleges.getFirst().data.getROI().getRaw();
                            double minLoanPayoffPeriod= userColleges.getFirst().data.getLoanPayoffPeriod().getRaw();
                            double minUpfrontCost= userColleges.getFirst().data.getUpfrontCost().getRaw();
                            double maxEarlyCareerSalary=userColleges.getFirst().data.getEarlyCareerSalary().getRaw();
                            double maxMidCareerSalary=userColleges.getFirst().data.getMidCareerSalary().getRaw();
                            for(CollegeNode curr = userColleges.getFirst(); curr !=null; curr=curr.next)
                            {
                                if (curr.data.getROI().getRaw()>maxROI)
                                {
                                    maxROI = curr.data.getROI().getRaw();
                                }
                                if (curr.data.getLoanPayoffPeriod().getRaw()<minLoanPayoffPeriod)
                                {
                                    minLoanPayoffPeriod=curr.data.getLoanPayoffPeriod().getRaw();
                                }
                                if (curr.data.getUpfrontCost().getRaw()<minUpfrontCost)
                                {
                                    minUpfrontCost = curr.data.getUpfrontCost().getRaw();
                                }                              
                                if (curr.data.getEarlyCareerSalary().getRaw()>maxEarlyCareerSalary)
                                {
                                    maxEarlyCareerSalary=curr.data.getEarlyCareerSalary().getRaw();
                                }
                                if (curr.data.getMidCareerSalary().getRaw()>maxMidCareerSalary)
                                {
                                    maxMidCareerSalary = curr.data.getMidCareerSalary().getRaw();
                                }
                            }
                            
                            //each financial factor's relative instance variable is calculated
                            //logic of  calculation:
                            //for ROI, mid-career salary, and early career salary, the relative variable will get higher as a FinancialFactor's raw variable gets higher because it is a greater proportion of the mox
                            //for loan-payoff period and upfront cost, the relative variable will get higher as a FinancialFactor's raw variable gets lower because the min takes up a greater proportion of it
                            for (CollegeNode curr = userColleges.getFirst(); curr !=null; curr=curr.next)
                            {
                                curr.data.getROI().setRelative(curr.data.getROI().getRaw()/maxROI);
                                curr.data.getLoanPayoffPeriod().setRelative(minLoanPayoffPeriod/curr.data.getLoanPayoffPeriod().getRaw());
                                curr.data.getUpfrontCost().setRelative(minUpfrontCost/curr.data.getUpfrontCost().getRaw());
                                curr.data.getEarlyCareerSalary().setRelative(curr.data.getEarlyCareerSalary().getRaw()/maxEarlyCareerSalary);
                                curr.data.getMidCareerSalary().setRelative(curr.data.getMidCareerSalary().getRaw()/maxMidCareerSalary);
                                //calculate FinancialBenefitIndex ("overall percentage match") for each college in the Linked List
                                curr.data.setFinancialBenefitIndex(curr.data.calculateFinancialBenefitIndex());
                            }                            
                            //sort the Linked List based on FinancialBenefit Index
                            for(int i=0;i<userColleges.getSize();i++)
                            {
                                CollegeNode prev=userColleges.getFirst();
                                CollegeNode prevsPrev=userColleges.getFirst();
                                for(CollegeNode curr = userColleges.getFirst().next; curr !=null; curr=curr.next)
                                {
                                    if (prev.data.getFinancialBenefitIndex()<curr.data.getFinancialBenefitIndex())
                                    {
                                        if (prev ==userColleges.getFirst())
                                        {
                                            userColleges.setFirst(curr);
                                            prev.next=curr.next;
                                            curr.next = prev;
                                        }
                                        else
                                        {
                                            prev.next=curr.next;
                                            curr.next = prev;
                                            prevsPrev.next=curr;
                                        }
                                        
                                    }
                                    else
                                    {
                                        prevsPrev=prev;
                                    }
                                    prev = curr;
                                }
                            }
                            //create arrays containing the labels for the top 5 colleges in the LinkedList
                            javax.swing.JLabel[] collegeNames = {college1Name, college2Name,college3Name,college4Name,college5Name};
                            javax.swing.JLabel[] collegeFBIs = {college1Score, college2Score,college3Score,college4Score,college5Score};
                            javax.swing.JLabel[] collegeBestAreas = {college1BestArea,college2BestArea,college3BestArea,college4BestArea,college5BestArea};
                            javax.swing.JLabel[] collegeWorstAreas = {college1WorstArea,college2WorstArea,college3WorstArea,college4WorstArea,college5WorstArea};
                            javax.swing.JRadioButton[] collegeOptions = {college1Option,college2Option,college3Option,college4Option,college5Option};
                            
                            //check if the user entered more than 5 colleges
                            if (collegeNames.length<userColleges.getSize())
                            {
                                //set the labels for each column on the rankings screen to correspond to the first five colleges in the sorted Linked List (colleges with the highest FinancialBenefitIndex)
                                for (int i = 0;i<collegeNames.length;i++)
                                {
                                    collegeNames[i].setText(userColleges.get(i).data.getName());
                                    collegeOptions[i].setText(userColleges.get(i).data.getName());
                                    collegeFBIs[i].setText((int)(userColleges.get(i).data.getFinancialBenefitIndex()*100)+"");
                                    collegeBestAreas[i].setText(userColleges.get(i).data.findBestFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                                    collegeWorstAreas[i].setText(userColleges.get(i).data.findWorstFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                                }
                            }
                            //user has entered 5 or less colleges
                            else
                            {
                                int count =0;
                                //for how many ever colleges the user entered, set the labels to correspond the colleges in the order that they are in the sorted Linked List
                                for(int i =0; i<userColleges.getSize();i++)
                                {
                                    collegeNames[i].setText(userColleges.get(i).data.getName());
                                    collegeOptions[i].setText(userColleges.get(i).data.getName());
                                    collegeFBIs[i].setText((int)(userColleges.get(i).data.getFinancialBenefitIndex()*100)+"");
                                    collegeBestAreas[i].setText(userColleges.get(i).data.findBestFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                                    collegeWorstAreas[i].setText(userColleges.get(i).data.findWorstFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                                    count = i;
                                }
                                //set the remaining labels not visible
                                for (int i = count+1;i<collegeNames.length;i++)
                                {
                                    collegeNames[i].setVisible(false);
                                    collegeOptions[i].setVisible(false);
                                    collegeFBIs[i].setVisible(false);
                                    collegeBestAreas[i].setVisible(false);
                                    collegeWorstAreas[i].setVisible(false);
                                }  
                                //set the labels and textfields that would allow the user to add colleges beyond their top 5 on the compare colleges feature to not visible
                                college6Option.setVisible(false);
                                college7Option.setVisible(false);
                                miscCollege1.setVisible(false);
                                miscCollege2.setVisible(false);
                                canAddOthersInfo.setVisible(false);
                            }                          
                            collegeInfoWindow.setVisible(false);
                            rankingWindow.setVisible(true);
                        }
                        catch (Exception h) {
                            System.out.println(h.toString());
                            h.printStackTrace();
                            notDoubleErrorWindow.setVisible(true);
                        }
                    }
                    catch (Exception g) {
                        g.printStackTrace();
                        notDoubleErrorWindow.setVisible(true);
                        
                    }
                }
                catch (Exception f) {
                    f.printStackTrace();
                    notDoubleErrorWindow.setVisible(true);
                }
            }
            catch(Exception e) {
                e.printStackTrace();
                notDoubleErrorWindow.setVisible(true);
            }
        }
        else {
            blankFieldErrorWindow.setVisible(true);
        }

    }//GEN-LAST:event_finishAddingCollegesActionPerformed

    private void scholarPresenceTrueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scholarPresenceTrueActionPerformed
        // TODO add your handling code here:
        scholarTrueFalseWindow.setVisible(false);
        scholarInfoWindow.setVisible(true);
    }//GEN-LAST:event_scholarPresenceTrueActionPerformed

    private void scholarPresenceFalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scholarPresenceFalseActionPerformed
        // TODO add your handling code here:
        scholarTrueFalseWindow.setVisible(false);
        collegeInfoWindow.setVisible(true);
    }//GEN-LAST:event_scholarPresenceFalseActionPerformed

    private void oneTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oneTimeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_oneTimeFocusGained

    private void oneTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oneTimeActionPerformed

    private void finishAddingScholarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishAddingScholarsActionPerformed
        // TODO add your handling code here:
        if (oneTime.isSelected()){
            try {
                abilityToPay += Double.parseDouble(scholarAmount.getText());
                scholarInfoWindow.setVisible(false);
                collegeInfoWindow.setVisible(true);
            }
            catch (Exception z) {
                z.printStackTrace();
                notDoubleErrorWindow.setVisible(true);
            }
        }
        else if (fourTime.isSelected()) {
            try {
                //annually repeated scholarships are counted four times in increasing the user's ability to pay for college
                abilityToPay += 4*Double.parseDouble(scholarAmount.getText());
                scholarInfoWindow.setVisible(false);
                collegeInfoWindow.setVisible(true);
            }
            catch (Exception y)
            {
                y.printStackTrace();
                notDoubleErrorWindow.setVisible(true);
            }
        }
        else {
            buttonNotSelectedErrorWindow.setVisible(true);
        }
        
        
    }//GEN-LAST:event_finishAddingScholarsActionPerformed

    private void addMoreScholarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoreScholarsActionPerformed
        // TODO add your handling code here:
            if (oneTime.isSelected()){
                try {
                abilityToPay += Double.parseDouble(scholarAmount.getText());
                scholarAmount.setText("");
                oneTime.setSelected(false);
                }
                catch (Exception z) {
                    z.printStackTrace();
                    notDoubleErrorWindow.setVisible(true);
                }
            }
            else if (fourTime.isSelected()) {
                try {
                abilityToPay += 4*Double.parseDouble(scholarAmount.getText());
                scholarAmount.setText("");
                fourTime.setSelected(false);
                }
                catch (Exception y)
                {
                    y.printStackTrace();
                    notDoubleErrorWindow.setVisible(true);
                }
            }
            else {
                buttonNotSelectedErrorWindow.setVisible(true);
            }
        
    }//GEN-LAST:event_addMoreScholarsActionPerformed

    private void errorMessageAcknowledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorMessageAcknowledgeActionPerformed
        // TODO add your handling code here:
        notDoubleErrorWindow.setVisible(false);
    }//GEN-LAST:event_errorMessageAcknowledgeActionPerformed

    private void weightRankingsImplementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightRankingsImplementActionPerformed
        // TODO add your handling code here:
        double sumOfSliderValues = (ROIWeighting.getValue()+loanPayoffPeriodWeighting.getValue()+upfrontCostWeighting.getValue()+midCareerSalaryWeighting.getValue()+earlyCareerSalaryWeighting.getValue());
        //weighting calculations are similar to relative calculations for ROI, early career salary, and mid-career salary
        //each FinancialFactor's weight is set to the proportion of importance that the user indicated on its slider versus sum of the levels of the importance the user gave to all the FinancialFactor attributes
        for(CollegeNode curr = userColleges.getFirst(); curr !=null; curr=curr.next)
        {
            curr.data.getROI().setWeight((ROIWeighting.getValue()+0.0)/sumOfSliderValues);
            curr.data.getLoanPayoffPeriod().setWeight((loanPayoffPeriodWeighting.getValue()+0.0)/sumOfSliderValues);
            curr.data.getUpfrontCost().setWeight((upfrontCostWeighting.getValue()+0.0)/sumOfSliderValues);
            curr.data.getMidCareerSalary().setWeight((midCareerSalaryWeighting.getValue()+0.0)/sumOfSliderValues);
            curr.data.getEarlyCareerSalary().setWeight((earlyCareerSalaryWeighting.getValue()+0.0)/sumOfSliderValues);
        }
        //financialBenefitIndex is recalculated for each college in the Linked List based on new weightings
        for (CollegeNode curr = userColleges.getFirst(); curr !=null; curr=curr.next)
        {
            curr.data.setFinancialBenefitIndex(curr.data.calculateFinancialBenefitIndex());
        }
        //Linked List is resorted using same algorithim      
        for(int i=0;i<userColleges.getSize();i++)
        {
            CollegeNode prev=userColleges.getFirst();
            CollegeNode prevsPrev=userColleges.getFirst();
            for(CollegeNode curr = userColleges.getFirst().next; curr !=null; curr=curr.next)
            {
                if (prev.data.getFinancialBenefitIndex()<curr.data.getFinancialBenefitIndex())
                
                    if (prev ==userColleges.getFirst())
                    {
                        userColleges.setFirst(curr);
                        prev.next=curr.next;
                        curr.next = prev;
                    }
                    else
                    {
                        prev.next=curr.next;
                        curr.next = prev;
                        prevsPrev.next=curr;
                    }
                else
                {
                    prevsPrev=prev;
                }
                prev = curr;
            }
        }
            
        //same process in displaying rankings window that occured in the finishAddingCollegesActionPerformed() method
        javax.swing.JLabel[] collegeNames = {college1Name, college2Name,college3Name,college4Name,college5Name};
        javax.swing.JLabel[] collegeFBIs = {college1Score, college2Score,college3Score,college4Score,college5Score};
        javax.swing.JLabel[] collegeBestAreas = {college1BestArea,college2BestArea,college3BestArea,college4BestArea,college5BestArea};
        javax.swing.JLabel[] collegeWorstAreas = {college1WorstArea,college2WorstArea,college3WorstArea,college4WorstArea,college5WorstArea};
                   
        
        if (collegeNames.length<=userColleges.getSize())
        {
            for (int i = 0;i<collegeNames.length;i++)
            {
                collegeNames[i].setText(userColleges.get(i).data.getName());
                collegeFBIs[i].setText((int)(userColleges.get(i).data.getFinancialBenefitIndex()*100)+"");
                collegeBestAreas[i].setText(userColleges.get(i).data.findBestFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                collegeWorstAreas[i].setText(userColleges.get(i).data.findWorstFactor(userColleges.get(i).data.getFinancialFactors()).getName());
            }
        }
        else
        {
            int count =0;
            for (int i = 0;i<userColleges.getSize();i++)
            {
                collegeNames[i].setText(userColleges.get(i).data.getName());
                collegeFBIs[i].setText((int)(userColleges.get(i).data.getFinancialBenefitIndex()*100)+"");
                collegeBestAreas[i].setText(userColleges.get(i).data.findBestFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                collegeWorstAreas[i].setText(userColleges.get(i).data.findWorstFactor(userColleges.get(i).data.getFinancialFactors()).getName());
                count = i;
            }
            for (int i = count+1;i<collegeNames.length;i++)
            {
                collegeNames[i].setVisible(false);
                collegeFBIs[i].setVisible(false);
                collegeBestAreas[i].setVisible(false);
                collegeWorstAreas[i].setVisible(false);
            }
        }                    
        weightingSettingsWindow.setVisible(false);
        rankingWindow.setVisible(true);
    }//GEN-LAST:event_weightRankingsImplementActionPerformed

    private void weightRankingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightRankingsActionPerformed
        // TODO add your handling code here:
        rankingWindow.setVisible(false);
        weightingSettingsWindow.setVisible(true);
    }//GEN-LAST:event_weightRankingsActionPerformed

    private void compareCollegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareCollegesActionPerformed
        // TODO add your handling code here:
        rankingWindow.setVisible(false);
        //create an array of buttons that correspond to an array of labels
        javax.swing.JRadioButton[] collegeOptions = {college1Option,college2Option,college3Option,college4Option,college5Option};
        javax.swing.JLabel[] collegeNames = {college1Name, college2Name,college3Name,college4Name,college5Name};
        //labels set to the names of the user's top 5 financially beneficial colleges
        for(int i =0;i<collegeNames.length;i++)
        {
            collegeOptions[i].setText(collegeNames[i].getText());
        }
        CollegesToCompareWindow.setVisible(true);
    }//GEN-LAST:event_compareCollegesActionPerformed

    private void errorMessageAcknowledge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorMessageAcknowledge1ActionPerformed
        // TODO add your handling code here:
        blankFieldErrorWindow.setVisible(false);
    }//GEN-LAST:event_errorMessageAcknowledge1ActionPerformed

    private void errorMessageAcknowledge2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorMessageAcknowledge2ActionPerformed
        // TODO add your handling code here:
        buttonNotSelectedErrorWindow.setVisible(false);
    }//GEN-LAST:event_errorMessageAcknowledge2ActionPerformed

    private void window4ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_window4ExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_window4ExitActionPerformed

    private void window2ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_window2ExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_window2ExitActionPerformed

    private void rankingWindowExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankingWindowExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_rankingWindowExitActionPerformed

    private void weightingSettingsWindowExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightingSettingsWindowExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_weightingSettingsWindowExitActionPerformed

    private void toRankingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toRankingsActionPerformed
        // TODO add your handling code here:
        comparisonWindow.setVisible(false);
        rankingWindow.setVisible(true);
    }//GEN-LAST:event_toRankingsActionPerformed

    private void comparisonWindowExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comparisonWindowExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_comparisonWindowExitActionPerformed

    private void college1OptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_college1OptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_college1OptionActionPerformed

    private void college6OptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_college6OptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_college6OptionActionPerformed

    private void compareCollegesImplementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareCollegesImplementActionPerformed
        // TODO add your handling code here:
        javax.swing.JRadioButton[] allCollegeOptions = {college1Option,college2Option,college3Option,college4Option,college5Option,college6Option,college7Option};
        //count how many buttons have been selected
        int buttonsSelected = 0;
        for (int i =0;i<allCollegeOptions.length;i++)
        {
            if (allCollegeOptions[i].isSelected())
            {
                buttonsSelected++;
            }
        }
        //check to make sure exactly two buttons have been selected
        if (buttonsSelected==2)
        {
            javax.swing.JRadioButton[] collegeOptions = {college1Option,college2Option,college3Option,college4Option,college5Option};
            //new array containing two college objects
            College[] collegesToCompare = new College[2];
            int collegesInComparison =0;
            //check top 5 colleges
            for(int i =0;i<collegeOptions.length;i++)
            {
                //if one of the buttons for a top 5 college has been selected, add that college object to the array
                if (collegeOptions[i].isSelected())
                {
                    collegesToCompare[collegesInComparison] = userColleges.get(i).data;
                    collegesInComparison++;
                }
                if (collegesInComparison>1){
                    break;
                }
            }
            //if less than two college objects have been added to the array after checking top 5 colleges, check the text fields
            if (collegesInComparison<2)
            {
                //for whichever button (or both) next to a textfield that has been selected, search for a college within the linked list that has the same name as whatever the user inputted in the text field
                if (college6Option.isSelected())
                {
                    for(int i = 0;i<userColleges.getSize();i++)
                    {
                        if (userColleges.get(i).data.getName().equals(miscCollege1.getText()))
                        {
                        collegesToCompare[collegesInComparison] = userColleges.get(i).data;
                        collegesInComparison++;
                        }
                    }
                }
                if (college7Option.isSelected())
                {
                   for(int i = 0;i<userColleges.getSize();i++)
                    {
                        if (userColleges.get(i).data.getName().equals(miscCollege2.getText()))
                        {
                        collegesToCompare[collegesInComparison] = userColleges.get(i).data;
                        collegesInComparison++;
                        }
                    } 
                }
            }
            comparisonWindowTitle.setText(collegesToCompare[0].getName()+" vs "+collegesToCompare[1].getName());
            double[] compareData = new double[5];
            String[] introText = {"Your return on investment after 20 years will be greater by $","Your salary one year after graduation will be greater by $","Your salary ten years after graduation will be greater by $","Your loan payoff period will be less by","Your upfront cost will be less by $"};
            compareData[0] = (int)(collegesToCompare[0].getROI().getRaw()-collegesToCompare[1].getROI().getRaw());
            compareData[3] = collegesToCompare[0].getLoanPayoffPeriod().getRaw()-collegesToCompare[1].getLoanPayoffPeriod().getRaw();
            compareData[4] = (int) (collegesToCompare[0].getUpfrontCost().getRaw()-collegesToCompare[1].getUpfrontCost().getRaw());
            compareData[1] = (int) (collegesToCompare[0].getEarlyCareerSalary().getRaw()-collegesToCompare[1].getEarlyCareerSalary().getRaw());
            compareData[2] = (int)(collegesToCompare[0].getMidCareerSalary().getRaw()-collegesToCompare[1].getMidCareerSalary().getRaw());
            javax.swing.JLabel[] comparisonStatements = {ROIComparison, earlyCareerSalaryComparison, midCareerSalaryComparison,loanPayoffPeriodComparison, upfrontCostComparison};
            //find differences between colleges for all financial factors
            //then create appropriate statements for each financial factor that will then be displayed on the compare colleges window
            for(int i =0;i<3;i++)
            {
                int betterIndex = 10;
                if (compareData[i]>=0)
                {
                    betterIndex = 0;
                }
                else
                {
                    betterIndex = 1;
                    compareData[i]= -1*compareData[i];
                }
                comparisonStatements[i].setText(introText[i]+compareData[i]+" by attending "+collegesToCompare[betterIndex].getName());

            }
            for(int i=3;i<compareData.length;i++)
            {
                int betterIndex = 10;
                if (compareData[i]>=0)
                {
                    betterIndex = 1;
                }
                else
                {
                    betterIndex = 0;
                    compareData[i]= -1*compareData[i];
                } 
                if (i==3)
                {
                    comparisonStatements[i].setText(introText[i]+" "+compareData[i]+" years by attending "+collegesToCompare[betterIndex].getName());
                }
                else
                {
                    comparisonStatements[i].setText(introText[i]+compareData[i]+" by attending "+collegesToCompare[betterIndex].getName());
                }
            }
            CollegesToCompareWindow.setVisible(false);
            comparisonWindow.setVisible(true);
        }
        else
        {
            tooManyButtonsErrorWindow.setVisible(true);
        }
    }//GEN-LAST:event_compareCollegesImplementActionPerformed

    private void errorMessageAcknowledge3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorMessageAcknowledge3ActionPerformed
        // TODO add your handling code here:
        tooManyButtonsErrorWindow.setVisible(false);
    }//GEN-LAST:event_errorMessageAcknowledge3ActionPerformed

    private void errorMessageAcknowledge4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorMessageAcknowledge4ActionPerformed
        // TODO add your handling code here:
        collegeNotFoundErrorWindow.setVisible(false);
    }//GEN-LAST:event_errorMessageAcknowledge4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
   
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CollegesToCompareWindow;
    private javax.swing.JLabel ErrorTitle;
    private javax.swing.JLabel ErrorTitle1;
    private javax.swing.JLabel ErrorTitle2;
    private javax.swing.JLabel ErrorTitle3;
    private javax.swing.JLabel ErrorTitle4;
    private javax.swing.JLabel ROIComparison;
    private javax.swing.JSlider ROIWeighting;
    private javax.swing.JLabel ROIWeightingLabel;
    private javax.swing.JButton addMoreColleges;
    private javax.swing.JButton addMoreScholars;
    private javax.swing.JLayeredPane allWindowsLayered;
    private javax.swing.JLabel bestAreaLabel;
    private javax.swing.JLabel blankFieldErrorMessage;
    private javax.swing.JLabel blankFieldErrorMessage1;
    private javax.swing.JPanel blankFieldErrorWindow;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel buttonNotSelectedErrorMessage;
    private javax.swing.JPanel buttonNotSelectedErrorWindow;
    private javax.swing.JLabel canAddOthersInfo;
    private javax.swing.JLabel college1BestArea;
    private javax.swing.JLabel college1Name;
    private javax.swing.JRadioButton college1Option;
    private javax.swing.JLabel college1Score;
    private javax.swing.JLabel college1WorstArea;
    private javax.swing.JLabel college2BestArea;
    private javax.swing.JLabel college2Name;
    private javax.swing.JRadioButton college2Option;
    private javax.swing.JLabel college2Score;
    private javax.swing.JLabel college2WorstArea;
    private javax.swing.JLabel college3BestArea;
    private javax.swing.JLabel college3Name;
    private javax.swing.JRadioButton college3Option;
    private javax.swing.JLabel college3Score;
    private javax.swing.JLabel college3WorstArea;
    private javax.swing.JLabel college4BestArea;
    private javax.swing.JLabel college4Name;
    private javax.swing.JRadioButton college4Option;
    private javax.swing.JLabel college4Score;
    private javax.swing.JLabel college4WorstArea;
    private javax.swing.JLabel college5BestArea;
    private javax.swing.JLabel college5Name;
    private javax.swing.JRadioButton college5Option;
    private javax.swing.JLabel college5Score;
    private javax.swing.JLabel college5WorstArea;
    private javax.swing.JRadioButton college6Option;
    private javax.swing.JRadioButton college7Option;
    private javax.swing.JPanel collegeInfoWindow;
    private javax.swing.JTextField collegeName;
    private javax.swing.JLabel collegeNotFoundErrorMessage;
    private javax.swing.JPanel collegeNotFoundErrorWindow;
    private javax.swing.JLabel collegesToCompareQuestion;
    private javax.swing.JButton compareColleges;
    private javax.swing.JButton compareCollegesImplement;
    private javax.swing.JPanel comparisonWindow;
    private javax.swing.JButton comparisonWindowExit;
    private javax.swing.JLabel comparisonWindowTitle;
    private javax.swing.JLabel earlyCareerSalaryComparison;
    private javax.swing.JSlider earlyCareerSalaryWeighting;
    private javax.swing.JLabel earlyCareerSalaryWeightingLabel;
    private javax.swing.JButton errorMessageAcknowledge;
    private javax.swing.JButton errorMessageAcknowledge1;
    private javax.swing.JButton errorMessageAcknowledge2;
    private javax.swing.JButton errorMessageAcknowledge3;
    private javax.swing.JButton errorMessageAcknowledge4;
    private javax.swing.JButton finishAddingColleges;
    private javax.swing.JButton finishAddingScholars;
    private javax.swing.JRadioButton fourTime;
    private javax.swing.JTextField grantsMoney;
    private javax.swing.JLabel importantLabel;
    private javax.swing.JTextField interestRate;
    private javax.swing.JLabel loanPayoffPeiodWeightingLabel;
    private javax.swing.JLabel loanPayoffPeriodComparison;
    private javax.swing.JSlider loanPayoffPeriodWeighting;
    private javax.swing.JTextField loansMoney;
    private javax.swing.JLabel matchScoreLabel;
    private javax.swing.JLabel midCareerSalaryComparison;
    private javax.swing.JSlider midCareerSalaryWeighting;
    private javax.swing.JLabel midCareerSalaryWeightingLabel;
    private javax.swing.JTextField miscCollege1;
    private javax.swing.JTextField miscCollege2;
    private javax.swing.JLabel neutralLabel;
    private javax.swing.JLabel notDoubleErrorMessageLine1;
    private javax.swing.JLabel notDoubleErrorMessageLine2;
    private javax.swing.JPanel notDoubleErrorWindow;
    private javax.swing.JLabel notImporantLabel;
    private javax.swing.JRadioButton oneTime;
    private javax.swing.JLabel percentSignLabel;
    private javax.swing.JPanel rankingWindow;
    private javax.swing.JButton rankingWindowExit;
    private javax.swing.JLabel rankingWindowTitle;
    private javax.swing.JTextField scholarAmount;
    private javax.swing.JPanel scholarInfoWindow;
    private javax.swing.JButton scholarPresenceFalse;
    private javax.swing.JButton scholarPresenceTrue;
    private javax.swing.JPanel scholarTrueFalseWindow;
    private javax.swing.JButton toRankings;
    private javax.swing.JPanel tooManyButtonsErrorWindow;
    private javax.swing.JLabel upfrontCostComparison;
    private javax.swing.JSlider upfrontCostWeighting;
    private javax.swing.JLabel upfrontCostWeightingLabel;
    private javax.swing.JButton weightRankings;
    private javax.swing.JButton weightRankingsImplement;
    private javax.swing.JLabel weightingSettingsTitle;
    private javax.swing.JPanel weightingSettingsWindow;
    private javax.swing.JToggleButton weightingSettingsWindowExit;
    private javax.swing.JButton window2Exit;
    private javax.swing.JLabel window2Question1;
    private javax.swing.JLabel window2Question2;
    private javax.swing.JLabel window2Question3;
    private javax.swing.JLabel window2Question4;
    private javax.swing.JLabel window2Question5;
    private javax.swing.JLabel window2Title;
    private javax.swing.JLabel window2Title2;
    private javax.swing.JLabel window3Question1;
    private javax.swing.JButton window4Exit;
    private javax.swing.JLabel window4Question1;
    private javax.swing.JLabel window4Title;
    private javax.swing.JTextField workstudysMoney;
    private javax.swing.JLabel worstAreaLabel;
    // End of variables declaration//GEN-END:variables
}
